return {
  -- Set lualine as statusline
  'nvim-lualine/lualine.nvim',
  -- See `:help lualine.txt`
  init = function()
    local lualine = require('lualine')

    local lsp = {
      function()
        local msg = 'No Active Lsp'
        local buf_ft = vim.api.nvim_buf_get_option(0, 'filetype')
        local clients = vim.lsp.get_active_clients()
        if next(clients) == nil then
          return msg
        end
        for _, client in ipairs(clients) do
          local filetypes = client.config.filetypes
          if filetypes and vim.fn.index(filetypes, buf_ft) ~= -1 then
            return client.name
          end
        end
        return msg
      end,
      icon = ' LSP:',
    }

    local colorscheme_mode = {
      function()
        return vim.o.background == "light" and "󰖨" or ""
      end,
      on_click = function(_, _)
        if vim.o.background == "light" then
          vim.o.background = "dark"
        else
          vim.o.background = "light"
        end
      end,
    }

    local home = {
      function()
        return ""
      end,
      on_click = function()
        vim.cmd "Startify"
        vim.cmd "only"
      end,
    }

    local config = {
      options = {
        icons_enabled = true,
        theme = 'auto',
        -- component_separators = '|',
        -- section_separators = '',
      },
      -- defaults + lsp
      sections = {
        lualine_a = { 'mode' },
        lualine_b = { 'branch', 'diff', 'diagnostics' },
        lualine_c = { 'filename' },
        lualine_x = { lsp },
        lualine_y = { 'encoding', 'fileformat', 'filetype' },
        lualine_z = { 'progress', 'location' }
      },
      tabline = {
        lualine_a = { home },
        lualine_b = { 'buffers' },
        lualine_c = {},
        lualine_x = {},
        lualine_y = { 'tabs' },
        lualine_z = { colorscheme_mode }
      },
      -- extensions = { 'quickfix', 'neo-tree' },
    }

    lualine.setup(config)
  end,
}
